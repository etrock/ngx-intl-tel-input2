{"version":3,"sources":["../../../projects/ngx-intl-tel-input/src/lib/enums/country-iso.enum.ts","../../../projects/ngx-intl-tel-input/src/lib/enums/search-country-field.enum.ts","../../../projects/ngx-intl-tel-input/src/lib/data/country-code.ts","../../../projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.validator.ts","../../../projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.component.ts","../../../projects/ngx-intl-tel-input/src/lib/directives/native-element-injector.directive.ts","../../../projects/ngx-intl-tel-input/src/lib/enums/tooltip-label.enum.ts","../../../projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.module.ts"],"names":["CountryISO","SearchCountryField","this","allCountries","Afghanistan","Albania","Algeria","Andorra","Angola","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahrain","Bangladesh","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","BosniaAndHerzegovina","Botswana","Brazil","BritishIndianOceanTerritory","Brunei","Bulgaria","BurkinaFaso","Burundi","Cambodia","Cameroon","Canada","CapeVerde","CaribbeanNetherlands","CentralAfricanRepublic","Chad","Chile","China","ChristmasIsland","Cocos","Colombia","Comoros","CongoDRCJamhuriYaKidemokrasiaYaKongo","CongoRepublicCongoBrazzaville","CookIslands","CostaRica","CôteDIvoire","Croatia","Cuba","Curaçao","Cyprus","CzechRepublic","Denmark","Djibouti","Dominica","DominicanRepublic","Ecuador","Egypt","ElSalvador","EquatorialGuinea","Eritrea","Estonia","Ethiopia","FalklandIslands","FaroeIslands","Fiji","Finland","France","FrenchGuiana","FrenchPolynesia","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Honduras","HongKong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","IsleOfMan","Israel","Italy","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macau","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","MarshallIslands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","NewCaledonia","NewZealand","Nicaragua","Niger","Nigeria","Niue","NorfolkIsland","NorthKorea","NorthernMarianaIslands","Norway","Oman","Pakistan","Palau","Palestine","Panama","PapuaNewGuinea","Paraguay","Peru","Philippines","Poland","Portugal","PuertoRico","Qatar","Réunion","Romania","Russia","Rwanda","SaintBarthélemy","SaintHelena","SaintKittsAndNevis","SaintMartin","SaintPierreAndMiquelon","Samoa","SanMarino","SãoToméAndPríncipe","SaudiArabia","Senegal","Serbia","Seychelles","SierraLeone","Singapore","Slovakia","Slovenia","SolomonIslands","Somalia","SouthAfrica","SouthKorea","SouthSudan","Spain","SriLanka","Sudan","Suriname","SvalbardAndJanMayen","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","TimorLeste","Togo","Tokelau","Tonga","Tunisia","Turkey","Turkmenistan","TurksAndCaicosIslands","Tuvalu","Uganda","Ukraine","UnitedArabEmirates","UnitedKingdom","UnitedStates","Uruguay","Uzbekistan","Vanuatu","VaticanCity","Venezuela","Vietnam","WallisAndFutuna","WesternSahara","Yemen","Zambia","Zimbabwe","ÅlandIslands","Injectable","phoneNumberValidator","control","value","el","nativeElement","inputBox","querySelector","undefined","id","isCheckValidation","getAttribute","isRequired","errors","required","error","validatePhoneNumber","valid","setCustomValidity","number","lpn.PhoneNumberUtil","getInstance","parse","countryCode","e","isValidNumberForRegion","clearValidators","NgxIntlTelInputComponent","countryCodeData","preferredCountries","enablePlaceholder","cssClass","onlyCountries","enableAutoCountrySelect","searchCountryFlag","searchCountryField","All","searchCountryPlaceholder","maxLength","selectFirstCountry","phoneValidation","inputId","separateDialCode","countryChange","EventEmitter","selectedCountry","areaCodes","dialCode","htmlId","flagClass","iso2","name","placeHolder","priority","phoneNumber","preferredCountriesInDropDown","phoneUtil","disabled","countrySearchText","onTouched","propagateChange","_","prototype","ngOnInit","init","ngOnChanges","changes","selectedISO","currentValue","previousValue","getSelectedCountry","getPreferredCountries","checkSeparateDialCodeStyle","_this","fetchCountryData","length","filter","c","includes","setSelectedCountry","forEach","preferredCountry","push","selectedCountryISO","find","toLowerCase","onPhoneNumberChange","country","emit","searchCountry","countrySearchTextLower","indexOf","startsWith","Iso2","Name","DialCode","countryList","scrollIntoView","behavior","block","inline","numberObj","toUpperCase","getCountryCode","getCountryIsoCode","newCountry","sort","a","b","intlNo","format","lpn.PhoneNumberFormat","INTERNATIONAL","removeDialCode","onCountrySelect","focus","onInputKeyPress","event","test","key","ctrlKey","preventDefault","toString","toLocaleLowerCase","getPhoneNumberPlaceHolder","getExampleNumber","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","writeValue","obj","setTimeout","rawNumber","countries","mainCountry","secondaryCountries","matchedCountry","areaCode","separateDialCodePlaceHolder","placeholder","substr","cntryCd","separateDialCodeClass","Component","args","selector","template","providers","CountryCode","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NG_VALIDATORS","useValue","ɵ0","Input","Output","ViewChild","NativeElementInjectorDirective","controlDir","host","Directive","NgControl","ElementRef","TooltipLabel","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","NgbDropdownModule","exports"],"mappings":"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,KACAA,EAAA,OAAA,KACAA,EAAA,aAAA,KACAA,EAAA,sBAAA,KACAA,EAAA,OAAA,KACAA,EAAA,gBAAA,KACAA,EAAA,OAAA,KACAA,EAAA,QAAA,KACAA,EAAA,mBAAA,KACAA,EAAA,cAAA,KACAA,EAAA,aAAA,KACAA,EAAA,QAAA,KACAA,EAAA,WAAA,KACAA,EAAA,QAAA,KACAA,EAAA,YAAA,KACAA,EAAA,UAAA,KACAA,EAAA,QAAA,KACAA,EAAA,gBAAA,KACAA,EAAA,cAAA,KACAA,EAAA,MAAA,KACAA,EAAA,OAAA,KACAA,EAAA,SAAA,KACAA,EAAA,gBAAA,SCnPWC,ICGZ,WAEQC,KAAAC,aAAe,CACrB,CACC,6BACAH,EAAAA,WAAWI,YACX,MAED,CACC,qBACAJ,EAAAA,WAAWK,QACX,OAED,CACC,uBACAL,EAAAA,WAAWM,QACX,OAED,CACC,iBACA,KACA,IACA,EACA,CACC,QAGF,CACC,UACAN,EAAAA,WAAWO,QACX,OAED,CACC,SACAP,EAAAA,WAAWQ,OACX,OAED,CACC,WACA,KACA,IACA,EACA,CACC,QAGF,CACC,sBACA,KACA,IACA,EACA,CACC,QAGF,CACC,YACAR,EAAAA,WAAWS,UACX,MAED,CACC,qBACAT,EAAAA,WAAWU,QACX,OAED,CACC,QACAV,EAAAA,WAAWW,MACX,OAED,CACC,YACAX,EAAAA,WAAWY,UACX,KACA,GAED,CACC,uBACAZ,EAAAA,WAAWa,QACX,MAED,CACC,0BACAb,EAAAA,WAAWc,WACX,OAED,CACC,UACA,KACA,IACA,EACA,CACC,QAGF,CACC,uBACAd,EAAAA,WAAWe,QACX,OAED,CACC,wBACAf,EAAAA,WAAWgB,WACX,OAED,CACC,WACA,KACA,IACA,EACA,CACC,QAGF,CACC,qBACAhB,EAAAA,WAAWiB,QACX,OAED,CACC,mBACAjB,EAAAA,WAAWkB,QACX,MAED,CACC,SACAlB,EAAAA,WAAWmB,OACX,OAED,CACC,gBACAnB,EAAAA,WAAWoB,MACX,OAED,CACC,UACA,KACA,IACA,EACA,CACC,QAGF,CACC,iBACApB,EAAAA,WAAWqB,OACX,OAED,CACC,UACArB,EAAAA,WAAWsB,QACX,OAED,CACC,+CACAtB,EAAAA,WAAWuB,qBACX,OAED,CACC,WACAvB,EAAAA,WAAWwB,SACX,OAED,CACC,kBACAxB,EAAAA,WAAWyB,OACX,MAED,CACC,iCACAzB,EAAAA,WAAW0B,4BACX,OAED,CACC,yBACA,KACA,IACA,EACA,CACC,QAGF,CACC,SACA1B,EAAAA,WAAW2B,OACX,OAED,CACC,sBACA3B,EAAAA,WAAW4B,SACX,OAED,CACC,eACA5B,EAAAA,WAAW6B,YACX,OAED,CACC,qBACA7B,EAAAA,WAAW8B,QACX,OAED,CACC,qBACA9B,EAAAA,WAAW+B,SACX,OAED,CACC,sBACA/B,EAAAA,WAAWgC,SACX,OAED,CACC,SACAhC,EAAAA,WAAWiC,OACX,IACA,EACA,CACC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC7E,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC7E,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC7E,MAAO,MAAO,MAAO,MAAO,MAAO,QAGrC,CACC,0BACAjC,EAAAA,WAAWkC,UACX,OAED,CACC,wBACAlC,EAAAA,WAAWmC,qBACX,MACA,GAED,CACC,iBACA,KACA,IACA,EACA,CACC,QAGF,CACC,uDACAnC,EAAAA,WAAWoC,uBACX,OAED,CACC,eACApC,EAAAA,WAAWqC,KACX,OAED,CACC,QACArC,EAAAA,WAAWsC,MACX,MAED,CACC,aACAtC,EAAAA,WAAWuC,MACX,MAED,CACC,mBACAvC,EAAAA,WAAWwC,gBACX,KACA,GAED,CACC,0BACAxC,EAAAA,WAAWyC,MACX,KACA,GAED,CACC,WACAzC,EAAAA,WAAW0C,SACX,MAED,CACC,yBACA1C,EAAAA,WAAW2C,QACX,OAED,CACC,iDACA3C,EAAAA,WAAW4C,qCACX,OAED,CACC,uCACA5C,EAAAA,WAAW6C,8BACX,OAED,CACC,eACA7C,EAAAA,WAAW8C,YACX,OAED,CACC,aACA9C,EAAAA,WAAW+C,UACX,OAED,CACC,gBACA/C,EAAAA,WAAWgD,YACX,OAED,CACC,qBACAhD,EAAAA,WAAWiD,QACX,OAED,CACC,OACAjD,EAAAA,WAAWkD,KACX,MAED,CACC,UACAlD,EAAAA,WAAWmD,QACX,MACA,GAED,CACC,kBACAnD,EAAAA,WAAWoD,OACX,OAED,CACC,mCACApD,EAAAA,WAAWqD,cACX,OAED,CACC,oBACArD,EAAAA,WAAWsD,QACX,MAED,CACC,WACAtD,EAAAA,WAAWuD,SACX,OAED,CACC,WACAvD,EAAAA,WAAWwD,SACX,QAED,CACC,4CACAxD,EAAAA,WAAWyD,kBACX,IACA,EACA,CAAC,MAAO,MAAO,QAEhB,CACC,UACAzD,EAAAA,WAAW0D,QACX,OAED,CACC,iBACA1D,EAAAA,WAAW2D,MACX,MAED,CACC,cACA3D,EAAAA,WAAW4D,WACX,OAED,CACC,wCACA5D,EAAAA,WAAW6D,iBACX,OAED,CACC,UACA7D,EAAAA,WAAW8D,QACX,OAED,CACC,kBACA9D,EAAAA,WAAW+D,QACX,OAED,CACC,WACA/D,EAAAA,WAAWgE,SACX,OAED,CACC,oCACAhE,EAAAA,WAAWiE,gBACX,OAED,CACC,0BACAjE,EAAAA,WAAWkE,aACX,OAED,CACC,OACAlE,EAAAA,WAAWmE,KACX,OAED,CACC,kBACAnE,EAAAA,WAAWoE,QACX,MACA,GAED,CACC,SACApE,EAAAA,WAAWqE,OACX,MAED,CACC,mCACArE,EAAAA,WAAWsE,aACX,OAED,CACC,yCACAtE,EAAAA,WAAWuE,gBACX,OAED,CACC,QACAvE,EAAAA,WAAWwE,MACX,OAED,CACC,SACAxE,EAAAA,WAAWyE,OACX,OAED,CACC,uBACAzE,EAAAA,WAAW0E,QACX,OAED,CACC,wBACA1E,EAAAA,WAAW2E,QACX,MAED,CACC,gBACA3E,EAAAA,WAAW4E,MACX,OAED,CACC,YACA5E,EAAAA,WAAW6E,UACX,OAED,CACC,kBACA7E,EAAAA,WAAW8E,OACX,MAED,CACC,+BACA9E,EAAAA,WAAW+E,UACX,OAED,CACC,UACA/E,EAAAA,WAAWgF,QACX,QAED,CACC,aACAhF,EAAAA,WAAWiF,WACX,MACA,GAED,CACC,OACA,KACA,IACA,EACA,CACC,QAGF,CACC,YACAjF,EAAAA,WAAWkF,UACX,OAED,CACC,WACAlF,EAAAA,WAAWmF,SACX,KACA,EACA,CAAC,OAEF,CACC,kBACAnF,EAAAA,WAAWoF,OACX,OAED,CACC,+BACApF,EAAAA,WAAWqF,aACX,OAED,CACC,SACArF,EAAAA,WAAWsF,OACX,OAED,CACC,QACAtF,EAAAA,WAAWuF,MACX,OAED,CACC,WACAvF,EAAAA,WAAWwF,SACX,OAED,CACC,iBACAxF,EAAAA,WAAWyF,SACX,OAED,CACC,yBACAzF,EAAAA,WAAW0F,QACX,MAED,CACC,mBACA1F,EAAAA,WAAW2F,QACX,OAED,CACC,eACA3F,EAAAA,WAAW4F,MACX,MAED,CACC,YACA5F,EAAAA,WAAW6F,UACX,MAED,CACC,kBACA7F,EAAAA,WAAW8F,KACX,MAED,CACC,mBACA9F,EAAAA,WAAW+F,KACX,OAED,CACC,UACA/F,EAAAA,WAAWgG,QACX,OAED,CACC,cACAhG,EAAAA,WAAWiG,UACX,KACA,EACA,CAAC,OAEF,CACC,oBACAjG,EAAAA,WAAWkG,OACX,OAED,CACC,iBACAlG,EAAAA,WAAWmG,MACX,KACA,GAED,CACC,UACA,KACA,IACA,EACA,CACC,QAGF,CACC,aACAnG,EAAAA,WAAWoG,MACX,MAED,CACC,SACApG,EAAAA,WAAWqG,OACX,KACA,EACA,CAAC,OAEF,CACC,qBACArG,EAAAA,WAAWsG,OACX,OAED,CACC,yBACAtG,EAAAA,WAAWuG,WACX,IACA,GAED,CACC,QACAvG,EAAAA,WAAWwG,MACX,OAED,CACC,WACAxG,EAAAA,WAAWyG,SACX,OAED,CACC,SACAzG,EAAAA,WAAW0G,OACX,OAED,CACC,qBACA1G,EAAAA,WAAW2G,OACX,OAED,CACC,0BACA3G,EAAAA,WAAW4G,WACX,OAED,CACC,aACA5G,EAAAA,WAAW6G,KACX,OAED,CACC,mBACA7G,EAAAA,WAAW8G,OACX,OAED,CACC,qBACA9G,EAAAA,WAAW+G,QACX,OAED,CACC,UACA/G,EAAAA,WAAWgH,QACX,OAED,CACC,UACAhH,EAAAA,WAAWiH,QACX,OAED,CACC,mBACAjH,EAAAA,WAAWkH,MACX,OAED,CACC,gBACAlH,EAAAA,WAAWmH,cACX,OAED,CACC,sBACAnH,EAAAA,WAAWoH,UACX,OAED,CACC,aACApH,EAAAA,WAAWqH,WACX,OAED,CACC,aACArH,EAAAA,WAAWsH,MACX,OAED,CACC,iCACAtH,EAAAA,WAAWuH,UACX,OAED,CACC,4BACAvH,EAAAA,WAAWwH,WACX,OAED,CACC,SACAxH,EAAAA,WAAWyH,OACX,OAED,CACC,WACAzH,EAAAA,WAAW0H,SACX,MAED,CACC,WACA1H,EAAAA,WAAW2H,SACX,OAED,CACC,OACA3H,EAAAA,WAAW4H,KACX,OAED,CACC,QACA5H,EAAAA,WAAW6H,MACX,OAED,CACC,mBACA7H,EAAAA,WAAW8H,gBACX,OAED,CACC,aACA9H,EAAAA,WAAW+H,WACX,OAED,CACC,4BACA/H,EAAAA,WAAWgI,WACX,OAED,CACC,oBACAhI,EAAAA,WAAWiI,UACX,OAED,CACC,UACAjI,EAAAA,WAAWkI,QACX,MACA,GAED,CACC,kBACAlI,EAAAA,WAAWmI,OACX,MAED,CACC,aACAnI,EAAAA,WAAWoI,WACX,OAED,CACC,8BACApI,EAAAA,WAAWqI,QACX,OAED,CACC,SACArI,EAAAA,WAAWsI,OACX,OAED,CACC,oBACAtI,EAAAA,WAAWuI,SACX,OAED,CACC,yBACAvI,EAAAA,WAAWwI,WACX,OAED,CACC,aACA,KACA,IACA,EACA,CACC,QAGF,CACC,sBACAxI,EAAAA,WAAWyI,QACX,MACA,GAED,CACC,0BACAzI,EAAAA,WAAW0I,WACX,OAED,CACC,2BACA1I,EAAAA,WAAW2I,QACX,MAED,CACC,oBACA3I,EAAAA,WAAW4I,QACX,OAED,CACC,QACA5I,EAAAA,WAAW6I,MACX,OAED,CACC,gBACA7I,EAAAA,WAAW8I,MACX,OAED,CACC,0BACA9I,EAAAA,WAAW+I,YACX,MAED,CACC,qCACA/I,EAAAA,WAAWgJ,aACX,OAED,CACC,cACAhJ,EAAAA,WAAWiJ,WACX,MAED,CACC,YACAjJ,EAAAA,WAAWkJ,UACX,OAED,CACC,gBACAlJ,EAAAA,WAAWmJ,MACX,OAED,CACC,UACAnJ,EAAAA,WAAWoJ,QACX,OAED,CACC,OACApJ,EAAAA,WAAWqJ,KACX,OAED,CACC,iBACArJ,EAAAA,WAAWsJ,cACX,OAED,CACC,+BACAtJ,EAAAA,WAAWuJ,WACX,OAED,CACC,2BACAvJ,EAAAA,WAAWwJ,uBACX,QAED,CACC,iBACAxJ,EAAAA,WAAWyJ,OACX,KACA,GAED,CACC,kBACAzJ,EAAAA,WAAW0J,KACX,OAED,CACC,wBACA1J,EAAAA,WAAW2J,SACX,MAED,CACC,QACA3J,EAAAA,WAAW4J,MACX,OAED,CACC,wBACA5J,EAAAA,WAAW6J,UACX,OAED,CACC,kBACA7J,EAAAA,WAAW8J,OACX,OAED,CACC,mBACA9J,EAAAA,WAAW+J,eACX,OAED,CACC,WACA/J,EAAAA,WAAWgK,SACX,OAED,CACC,cACAhK,EAAAA,WAAWiK,KACX,MAED,CACC,cACAjK,EAAAA,WAAWkK,YACX,MAED,CACC,kBACAlK,EAAAA,WAAWmK,OACX,MAED,CACC,WACAnK,EAAAA,WAAWoK,SACX,OAED,CACC,cACApK,EAAAA,WAAWqK,WACX,IACA,EACA,CAAC,MAAO,QAET,CACC,iBACArK,EAAAA,WAAWsK,MACX,OAED,CACC,uBACAtK,EAAAA,WAAWuK,QACX,MACA,GAED,CACC,oBACAvK,EAAAA,WAAWwK,QACX,MAED,CACC,kBACAxK,EAAAA,WAAWyK,OACX,IACA,GAED,CACC,SACAzK,EAAAA,WAAW0K,OACX,OAED,CACC,sCACA1K,EAAAA,WAAW2K,gBACX,MACA,GAED,CACC,eACA3K,EAAAA,WAAW4K,YACX,OAED,CACC,wBACA5K,EAAAA,WAAW6K,mBACX,QAED,CACC,cACA,KACA,IACA,EACA,CACC,QAGF,CACC,iDACA7K,EAAAA,WAAW8K,YACX,MACA,GAED,CACC,uDACA9K,EAAAA,WAAW+K,uBACX,OAED,CACC,mCACA,KACA,IACA,EACA,CACC,QAGF,CACC,QACA/K,EAAAA,WAAWgL,MACX,OAED,CACC,aACAhL,EAAAA,WAAWiL,UACX,OAED,CACC,8CACAjL,EAAAA,WAAWkL,mBACX,OAED,CACC,6CACAlL,EAAAA,WAAWmL,YACX,OAED,CACC,oBACAnL,EAAAA,WAAWoL,QACX,OAED,CACC,kBACApL,EAAAA,WAAWqL,OACX,OAED,CACC,aACArL,EAAAA,WAAWsL,WACX,OAED,CACC,eACAtL,EAAAA,WAAWuL,YACX,OAED,CACC,YACAvL,EAAAA,WAAWwL,UACX,MAED,CACC,eACA,KACA,IACA,EACA,CACC,QAGF,CACC,uBACAxL,EAAAA,WAAWyL,SACX,OAED,CACC,uBACAzL,EAAAA,WAAW0L,SACX,OAED,CACC,kBACA1L,EAAAA,WAAW2L,eACX,OAED,CACC,uBACA3L,EAAAA,WAAW4L,QACX,OAED,CACC,eACA5L,EAAAA,WAAW6L,YACX,MAED,CACC,qBACA7L,EAAAA,WAAW8L,WACX,MAED,CACC,gCACA9L,EAAAA,WAAW+L,WACX,OAED,CACC,iBACA/L,EAAAA,WAAWgM,MACX,MAED,CACC,0BACAhM,EAAAA,WAAWiM,SACX,MAED,CACC,qBACAjM,EAAAA,WAAWkM,MACX,OAED,CACC,WACAlM,EAAAA,WAAWmM,SACX,OAED,CACC,yBACAnM,EAAAA,WAAWoM,oBACX,KACA,GAED,CACC,YACApM,EAAAA,WAAWqM,UACX,OAED,CACC,mBACArM,EAAAA,WAAWsM,OACX,MAED,CACC,wBACAtM,EAAAA,WAAWuM,YACX,MAED,CACC,mBACAvM,EAAAA,WAAWwM,MACX,OAED,CACC,cACAxM,EAAAA,WAAWyM,OACX,OAED,CACC,aACAzM,EAAAA,WAAW0M,WACX,OAED,CACC,WACA1M,EAAAA,WAAW2M,SACX,OAED,CACC,iBACA3M,EAAAA,WAAW4M,SACX,MAED,CACC,cACA5M,EAAAA,WAAW6M,WACX,OAED,CACC,OACA7M,EAAAA,WAAW8M,KACX,OAED,CACC,UACA9M,EAAAA,WAAW+M,QACX,OAED,CACC,QACA/M,EAAAA,WAAWgN,MACX,OAED,CACC,sBACA,KACA,IACA,EACA,CACC,QAGF,CACC,oBACAhN,EAAAA,WAAWiN,QACX,OAED,CACC,mBACAjN,EAAAA,WAAWkN,OACX,MAED,CACC,eACAlN,EAAAA,WAAWmN,aACX,OAED,CACC,2BACAnN,EAAAA,WAAWoN,sBACX,QAED,CACC,SACApN,EAAAA,WAAWqN,OACX,OAED,CACC,sBACA,KACA,IACA,EACA,CACC,QAGF,CACC,SACArN,EAAAA,WAAWsN,OACX,OAED,CACC,oBACAtN,EAAAA,WAAWuN,QACX,OAED,CACC,qDACAvN,EAAAA,WAAWwN,mBACX,OAED,CACC,iBACAxN,EAAAA,WAAWyN,cACX,KACA,GAED,CACC,gBACAzN,EAAAA,WAAW0N,aACX,IACA,GAED,CACC,UACA1N,EAAAA,WAAW2N,QACX,OAED,CACC,2BACA3N,EAAAA,WAAW4N,WACX,OAED,CACC,UACA5N,EAAAA,WAAW6N,QACX,OAED,CACC,oCACA7N,EAAAA,WAAW8N,YACX,KACA,GAED,CACC,YACA9N,EAAAA,WAAW+N,UACX,MAED,CACC,qBACA/N,EAAAA,WAAWgO,QACX,MAED,CACC,oBACAhO,EAAAA,WAAWiO,gBACX,OAED,CACC,sCACAjO,EAAAA,WAAWkO,cACX,MACA,GAED,CACC,mBACAlO,EAAAA,WAAWmO,MACX,OAED,CACC,SACAnO,EAAAA,WAAWoO,OACX,OAED,CACC,WACApO,EAAAA,WAAWqO,SACX,OAED,CACC,gBACArO,EAAAA,WAAWsO,aACX,MACA,yBAvyCFC,EAAAA,cDHWtO,EAAAA,EAAAA,qBAAAA,EAAAA,mBAAkB,KAC7B,SAAA,WACAA,EAAA,KAAA,OACAA,EAAA,KAAA,OACAA,EAAA,IAAA,UEOYuO,EAAuB,SAACC,GACpC,GAAKA,EAAQ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","sourcesContent":["export enum CountryISO {\r\n\tAfghanistan = 'af',\r\n\tAlbania = 'al',\r\n\tAlgeria = 'dz',\r\n\tAmericanSamoa = 'as',\r\n\tAndorra = 'ad',\r\n\tAngola = 'ao',\r\n\tAnguilla = 'ai',\r\n\tAntiguaAndBarbuda = 'ag',\r\n\tArgentina = 'ar',\r\n\tArmenia = 'am',\r\n\tAruba = 'aw',\r\n\tAustralia = 'au',\r\n\tAustria = 'at',\r\n\tAzerbaijan = 'az',\r\n\tBahamas = 'bs',\r\n\tBahrain = 'bh',\r\n\tBangladesh = 'bd',\r\n\tBarbados = 'bb',\r\n\tBelarus = 'by',\r\n\tBelgium = 'be',\r\n\tBelize = 'bz',\r\n\tBenin = 'bj',\r\n\tBermuda = 'bm',\r\n\tBhutan = 'bt',\r\n\tBolivia = 'bo',\r\n\tBosniaAndHerzegovina = 'ba',\r\n\tBotswana = 'bw',\r\n\tBrazil = 'br',\r\n\tBritishIndianOceanTerritory = 'io',\r\n\tBritishVirginIslands = 'vg',\r\n\tBrunei = 'bn',\r\n\tBulgaria = 'bg',\r\n\tBurkinaFaso = 'bf',\r\n\tBurundi = 'bi',\r\n\tCambodia = 'kh',\r\n\tCameroon = 'cm',\r\n\tCanada = 'ca',\r\n\tCapeVerde = 'cv',\r\n\tCaribbeanNetherlands = 'bq',\r\n\tCaymanIslands = 'ky',\r\n\tCentralAfricanRepublic = 'cf',\r\n\tChad = 'td',\r\n\tChile = 'cl',\r\n\tChina = 'cn',\r\n\tChristmasIsland = 'cx',\r\n\tCocos = 'cc',\r\n\tColombia = 'co',\r\n\tComoros = 'km',\r\n\tCongoDRCJamhuriYaKidemokrasiaYaKongo = 'cd',\r\n\tCongoRepublicCongoBrazzaville = 'cg',\r\n\tCookIslands = 'ck',\r\n\tCostaRica = 'cr',\r\n\tCôteDIvoire = 'ci',\r\n\tCroatia = 'hr',\r\n\tCuba = 'cu',\r\n\tCuraçao = 'cw',\r\n\tCyprus = 'cy',\r\n\tCzechRepublic = 'cz',\r\n\tDenmark = 'dk',\r\n\tDjibouti = 'dj',\r\n\tDominica = 'dm',\r\n\tDominicanRepublic = 'do',\r\n\tEcuador = 'ec',\r\n\tEgypt = 'eg',\r\n\tElSalvador = 'sv',\r\n\tEquatorialGuinea = 'gq',\r\n\tEritrea = 'er',\r\n\tEstonia = 'ee',\r\n\tEthiopia = 'et',\r\n\tFalklandIslands = 'fk',\r\n\tFaroeIslands = 'fo',\r\n\tFiji = 'fj',\r\n\tFinland = 'fi',\r\n\tFrance = 'fr',\r\n\tFrenchGuiana = 'gf',\r\n\tFrenchPolynesia = 'pf',\r\n\tGabon = 'ga',\r\n\tGambia = 'gm',\r\n\tGeorgia = 'ge',\r\n\tGermany = 'de',\r\n\tGhana = 'gh',\r\n\tGibraltar = 'gi',\r\n\tGreece = 'gr',\r\n\tGreenland = 'gl',\r\n\tGrenada = 'gd',\r\n\tGuadeloupe = 'gp',\r\n\tGuam = 'gu',\r\n\tGuatemala = 'gt',\r\n\tGuernsey = 'gg',\r\n\tGuinea = 'gn',\r\n\tGuineaBissau = 'gw',\r\n\tGuyana = 'gy',\r\n\tHaiti = 'ht',\r\n\tHonduras = 'hn',\r\n\tHongKong = 'hk',\r\n\tHungary = 'hu',\r\n\tIceland = 'is',\r\n\tIndia = 'in',\r\n\tIndonesia = 'id',\r\n\tIran = 'ir',\r\n\tIraq = 'iq',\r\n\tIreland = 'ie',\r\n\tIsleOfMan = 'im',\r\n\tIsrael = 'il',\r\n\tItaly = 'it',\r\n\tJamaica = 'jm',\r\n\tJapan = 'jp',\r\n\tJersey = 'je',\r\n\tJordan = 'jo',\r\n\tKazakhstan = 'kz',\r\n\tKenya = 'ke',\r\n\tKiribati = 'ki',\r\n\tKosovo = 'xk',\r\n\tKuwait = 'kw',\r\n\tKyrgyzstan = 'kg',\r\n\tLaos = 'la',\r\n\tLatvia = 'lv',\r\n\tLebanon = 'lb',\r\n\tLesotho = 'ls',\r\n\tLiberia = 'lr',\r\n\tLibya = 'ly',\r\n\tLiechtenstein = 'li',\r\n\tLithuania = 'lt',\r\n\tLuxembourg = 'lu',\r\n\tMacau = 'mo',\r\n\tMacedonia = 'mk',\r\n\tMadagascar = 'mg',\r\n\tMalawi = 'mw',\r\n\tMalaysia = 'my',\r\n\tMaldives = 'mv',\r\n\tMali = 'ml',\r\n\tMalta = 'mt',\r\n\tMarshallIslands = 'mh',\r\n\tMartinique = 'mq',\r\n\tMauritania = 'mr',\r\n\tMauritius = 'mu',\r\n\tMayotte = 'yt',\r\n\tMexico = 'mx',\r\n\tMicronesia = 'fm',\r\n\tMoldova = 'md',\r\n\tMonaco = 'mc',\r\n\tMongolia = 'mn',\r\n\tMontenegro = 'me',\r\n\tMontserrat = 'ms',\r\n\tMorocco = 'ma',\r\n\tMozambique = 'mz',\r\n\tMyanmar = 'mm',\r\n\tNamibia = 'na',\r\n\tNauru = 'nr',\r\n\tNepal = 'np',\r\n\tNetherlands = 'nl',\r\n\tNewCaledonia = 'nc',\r\n\tNewZealand = 'nz',\r\n\tNicaragua = 'ni',\r\n\tNiger = 'ne',\r\n\tNigeria = 'ng',\r\n\tNiue = 'nu',\r\n\tNorfolkIsland = 'nf',\r\n\tNorthKorea = 'kp',\r\n\tNorthernMarianaIslands = 'mp',\r\n\tNorway = 'no',\r\n\tOman = 'om',\r\n\tPakistan = 'pk',\r\n\tPalau = 'pw',\r\n\tPalestine = 'ps',\r\n\tPanama = 'pa',\r\n\tPapuaNewGuinea = 'pg',\r\n\tParaguay = 'py',\r\n\tPeru = 'pe',\r\n\tPhilippines = 'ph',\r\n\tPoland = 'pl',\r\n\tPortugal = 'pt',\r\n\tPuertoRico = 'pr',\r\n\tQatar = 'qa',\r\n\tRéunion = 're',\r\n\tRomania = 'ro',\r\n\tRussia = 'ru',\r\n\tRwanda = 'rw',\r\n\tSaintBarthélemy = 'bl',\r\n\tSaintHelena = 'sh',\r\n\tSaintKittsAndNevis = 'kn',\r\n\tSaintLucia = 'lc',\r\n\tSaintMartin = 'mf',\r\n\tSaintPierreAndMiquelon = 'pm',\r\n\tSaintVincentAndTheGrenadines = 'vc',\r\n\tSamoa = 'ws',\r\n\tSanMarino = 'sm',\r\n\tSãoToméAndPríncipe = 'st',\r\n\tSaudiArabia = 'sa',\r\n\tSenegal = 'sn',\r\n\tSerbia = 'rs',\r\n\tSeychelles = 'sc',\r\n\tSierraLeone = 'sl',\r\n\tSingapore = 'sg',\r\n\tSintMaarten = 'sx',\r\n\tSlovakia = 'sk',\r\n\tSlovenia = 'si',\r\n\tSolomonIslands = 'sb',\r\n\tSomalia = 'so',\r\n\tSouthAfrica = 'za',\r\n\tSouthKorea = 'kr',\r\n\tSouthSudan = 'ss',\r\n\tSpain = 'es',\r\n\tSriLanka = 'lk',\r\n\tSudan = 'sd',\r\n\tSuriname = 'sr',\r\n\tSvalbardAndJanMayen = 'sj',\r\n\tSwaziland = 'sz',\r\n\tSweden = 'se',\r\n\tSwitzerland = 'ch',\r\n\tSyria = 'sy',\r\n\tTaiwan = 'tw',\r\n\tTajikistan = 'tj',\r\n\tTanzania = 'tz',\r\n\tThailand = 'th',\r\n\tTimorLeste = 'tl',\r\n\tTogo = 'tg',\r\n\tTokelau = 'tk',\r\n\tTonga = 'to',\r\n\tTrinidadAndTobago = 'tt',\r\n\tTunisia = 'tn',\r\n\tTurkey = 'tr',\r\n\tTurkmenistan = 'tm',\r\n\tTurksAndCaicosIslands = 'tc',\r\n\tTuvalu = 'tv',\r\n\tUSVirginIslands = 'vi',\r\n\tUganda = 'ug',\r\n\tUkraine = 'ua',\r\n\tUnitedArabEmirates = 'ae',\r\n\tUnitedKingdom = 'gb',\r\n\tUnitedStates = 'us',\r\n\tUruguay = 'uy',\r\n\tUzbekistan = 'uz',\r\n\tVanuatu = 'vu',\r\n\tVaticanCity = 'va',\r\n\tVenezuela = 've',\r\n\tVietnam = 'vn',\r\n\tWallisAndFutuna = 'wf',\r\n\tWesternSahara = 'eh',\r\n\tYemen = 'ye',\r\n\tZambia = 'zm',\r\n\tZimbabwe = 'zw',\r\n\tÅlandIslands = 'ax',\r\n}\r\n","export enum SearchCountryField {\r\n\tDialCode = 'dialCode',\r\n\tIso2 = 'iso2',\r\n\tName = 'name',\r\n\tAll = 'all'\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { CountryISO } from '../enums/country-iso.enum';\r\n\r\n@Injectable()\r\nexport class CountryCode {\r\n\tpublic allCountries = [\r\n\t\t[\r\n\t\t\t'Afghanistan (‫افغانستان‬‎)',\r\n\t\t\tCountryISO.Afghanistan,\r\n\t\t\t'93'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Albania (Shqipëri)',\r\n\t\t\tCountryISO.Albania,\r\n\t\t\t'355'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Algeria (‫الجزائر‬‎)',\r\n\t\t\tCountryISO.Algeria,\r\n\t\t\t'213'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'American Samoa',\r\n\t\t\t'as',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'684',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Andorra',\r\n\t\t\tCountryISO.Andorra,\r\n\t\t\t'376'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Angola',\r\n\t\t\tCountryISO.Angola,\r\n\t\t\t'244'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Anguilla',\r\n\t\t\t'ai',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'264',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Antigua and Barbuda',\r\n\t\t\t'ag',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'268',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Argentina',\r\n\t\t\tCountryISO.Argentina,\r\n\t\t\t'54'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Armenia (Հայաստան)',\r\n\t\t\tCountryISO.Armenia,\r\n\t\t\t'374'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Aruba',\r\n\t\t\tCountryISO.Aruba,\r\n\t\t\t'297'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Australia',\r\n\t\t\tCountryISO.Australia,\r\n\t\t\t'61',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Austria (Österreich)',\r\n\t\t\tCountryISO.Austria,\r\n\t\t\t'43'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Azerbaijan (Azərbaycan)',\r\n\t\t\tCountryISO.Azerbaijan,\r\n\t\t\t'994'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bahamas',\r\n\t\t\t'bs',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'242',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bahrain (‫البحرين‬‎)',\r\n\t\t\tCountryISO.Bahrain,\r\n\t\t\t'973'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bangladesh (বাংলাদেশ)',\r\n\t\t\tCountryISO.Bangladesh,\r\n\t\t\t'880'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Barbados',\r\n\t\t\t'bb',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'246',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Belarus (Беларусь)',\r\n\t\t\tCountryISO.Belarus,\r\n\t\t\t'375'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Belgium (België)',\r\n\t\t\tCountryISO.Belgium,\r\n\t\t\t'32'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Belize',\r\n\t\t\tCountryISO.Belize,\r\n\t\t\t'501'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Benin (Bénin)',\r\n\t\t\tCountryISO.Benin,\r\n\t\t\t'229'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bermuda',\r\n\t\t\t'bm',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'441',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bhutan (འབྲུག)',\r\n\t\t\tCountryISO.Bhutan,\r\n\t\t\t'975'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bolivia',\r\n\t\t\tCountryISO.Bolivia,\r\n\t\t\t'591'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bosnia and Herzegovina (Босна и Херцеговина)',\r\n\t\t\tCountryISO.BosniaAndHerzegovina,\r\n\t\t\t'387'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Botswana',\r\n\t\t\tCountryISO.Botswana,\r\n\t\t\t'267'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Brazil (Brasil)',\r\n\t\t\tCountryISO.Brazil,\r\n\t\t\t'55'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'British Indian Ocean Territory',\r\n\t\t\tCountryISO.BritishIndianOceanTerritory,\r\n\t\t\t'246'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'British Virgin Islands',\r\n\t\t\t'vg',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'284',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Brunei',\r\n\t\t\tCountryISO.Brunei,\r\n\t\t\t'673'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Bulgaria (България)',\r\n\t\t\tCountryISO.Bulgaria,\r\n\t\t\t'359'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Burkina Faso',\r\n\t\t\tCountryISO.BurkinaFaso,\r\n\t\t\t'226'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Burundi (Uburundi)',\r\n\t\t\tCountryISO.Burundi,\r\n\t\t\t'257'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cambodia (កម្ពុជា)',\r\n\t\t\tCountryISO.Cambodia,\r\n\t\t\t'855'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cameroon (Cameroun)',\r\n\t\t\tCountryISO.Cameroon,\r\n\t\t\t'237'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Canada',\r\n\t\t\tCountryISO.Canada,\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416',\r\n\t\t\t\t'418', '431', '437', '438', '450', '506', '514', '519', '548', '579', '581', '587',\r\n\t\t\t\t'604', '613', '639', '647', '672', '705', '709', '742', '778', '780', '782', '807',\r\n\t\t\t\t'819', '825', '867', '873', '902', '905'\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cape Verde (Kabu Verdi)',\r\n\t\t\tCountryISO.CapeVerde,\r\n\t\t\t'238'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Caribbean Netherlands',\r\n\t\t\tCountryISO.CaribbeanNetherlands,\r\n\t\t\t'599',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cayman Islands',\r\n\t\t\t'ky',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'345',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Central African Republic (République centrafricaine)',\r\n\t\t\tCountryISO.CentralAfricanRepublic,\r\n\t\t\t'236'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Chad (Tchad)',\r\n\t\t\tCountryISO.Chad,\r\n\t\t\t'235'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Chile',\r\n\t\t\tCountryISO.Chile,\r\n\t\t\t'56'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'China (中国)',\r\n\t\t\tCountryISO.China,\r\n\t\t\t'86'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Christmas Island',\r\n\t\t\tCountryISO.ChristmasIsland,\r\n\t\t\t'61',\r\n\t\t\t2\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cocos (Keeling) Islands',\r\n\t\t\tCountryISO.Cocos,\r\n\t\t\t'61',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Colombia',\r\n\t\t\tCountryISO.Colombia,\r\n\t\t\t'57'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Comoros (‫جزر القمر‬‎)',\r\n\t\t\tCountryISO.Comoros,\r\n\t\t\t'269'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)',\r\n\t\t\tCountryISO.CongoDRCJamhuriYaKidemokrasiaYaKongo,\r\n\t\t\t'243'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Congo (Republic) (Congo-Brazzaville)',\r\n\t\t\tCountryISO.CongoRepublicCongoBrazzaville,\r\n\t\t\t'242'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cook Islands',\r\n\t\t\tCountryISO.CookIslands,\r\n\t\t\t'682'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Costa Rica',\r\n\t\t\tCountryISO.CostaRica,\r\n\t\t\t'506'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Côte d’Ivoire',\r\n\t\t\tCountryISO.CôteDIvoire,\r\n\t\t\t'225'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Croatia (Hrvatska)',\r\n\t\t\tCountryISO.Croatia,\r\n\t\t\t'385'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cuba',\r\n\t\t\tCountryISO.Cuba,\r\n\t\t\t'53'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Curaçao',\r\n\t\t\tCountryISO.Curaçao,\r\n\t\t\t'599',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Cyprus (Κύπρος)',\r\n\t\t\tCountryISO.Cyprus,\r\n\t\t\t'357'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Czech Republic (Česká republika)',\r\n\t\t\tCountryISO.CzechRepublic,\r\n\t\t\t'420'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Denmark (Danmark)',\r\n\t\t\tCountryISO.Denmark,\r\n\t\t\t'45'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Djibouti',\r\n\t\t\tCountryISO.Djibouti,\r\n\t\t\t'253'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Dominica',\r\n\t\t\tCountryISO.Dominica,\r\n\t\t\t'1767'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Dominican Republic (República Dominicana)',\r\n\t\t\tCountryISO.DominicanRepublic,\r\n\t\t\t'1',\r\n\t\t\t2,\r\n\t\t\t['809', '829', '849']\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ecuador',\r\n\t\t\tCountryISO.Ecuador,\r\n\t\t\t'593'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Egypt (‫مصر‬‎)',\r\n\t\t\tCountryISO.Egypt,\r\n\t\t\t'20'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'El Salvador',\r\n\t\t\tCountryISO.ElSalvador,\r\n\t\t\t'503'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Equatorial Guinea (Guinea Ecuatorial)',\r\n\t\t\tCountryISO.EquatorialGuinea,\r\n\t\t\t'240'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Eritrea',\r\n\t\t\tCountryISO.Eritrea,\r\n\t\t\t'291'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Estonia (Eesti)',\r\n\t\t\tCountryISO.Estonia,\r\n\t\t\t'372'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ethiopia',\r\n\t\t\tCountryISO.Ethiopia,\r\n\t\t\t'251'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Falkland Islands (Islas Malvinas)',\r\n\t\t\tCountryISO.FalklandIslands,\r\n\t\t\t'500'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Faroe Islands (Føroyar)',\r\n\t\t\tCountryISO.FaroeIslands,\r\n\t\t\t'298'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Fiji',\r\n\t\t\tCountryISO.Fiji,\r\n\t\t\t'679'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Finland (Suomi)',\r\n\t\t\tCountryISO.Finland,\r\n\t\t\t'358',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'France',\r\n\t\t\tCountryISO.France,\r\n\t\t\t'33'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'French Guiana (Guyane française)',\r\n\t\t\tCountryISO.FrenchGuiana,\r\n\t\t\t'594'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'French Polynesia (Polynésie française)',\r\n\t\t\tCountryISO.FrenchPolynesia,\r\n\t\t\t'689'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Gabon',\r\n\t\t\tCountryISO.Gabon,\r\n\t\t\t'241'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Gambia',\r\n\t\t\tCountryISO.Gambia,\r\n\t\t\t'220'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Georgia (საქართველო)',\r\n\t\t\tCountryISO.Georgia,\r\n\t\t\t'995'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Germany (Deutschland)',\r\n\t\t\tCountryISO.Germany,\r\n\t\t\t'49'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ghana (Gaana)',\r\n\t\t\tCountryISO.Ghana,\r\n\t\t\t'233'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Gibraltar',\r\n\t\t\tCountryISO.Gibraltar,\r\n\t\t\t'350'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Greece (Ελλάδα)',\r\n\t\t\tCountryISO.Greece,\r\n\t\t\t'30'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Greenland (Kalaallit Nunaat)',\r\n\t\t\tCountryISO.Greenland,\r\n\t\t\t'299'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Grenada',\r\n\t\t\tCountryISO.Grenada,\r\n\t\t\t'1473'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guadeloupe',\r\n\t\t\tCountryISO.Guadeloupe,\r\n\t\t\t'590',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guam',\r\n\t\t\t'gu',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'671',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guatemala',\r\n\t\t\tCountryISO.Guatemala,\r\n\t\t\t'502'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guernsey',\r\n\t\t\tCountryISO.Guernsey,\r\n\t\t\t'44',\r\n\t\t\t1,\r\n\t\t\t[1481]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guinea (Guinée)',\r\n\t\t\tCountryISO.Guinea,\r\n\t\t\t'224'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guinea-Bissau (Guiné Bissau)',\r\n\t\t\tCountryISO.GuineaBissau,\r\n\t\t\t'245'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Guyana',\r\n\t\t\tCountryISO.Guyana,\r\n\t\t\t'592'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Haiti',\r\n\t\t\tCountryISO.Haiti,\r\n\t\t\t'509'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Honduras',\r\n\t\t\tCountryISO.Honduras,\r\n\t\t\t'504'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Hong Kong (香港)',\r\n\t\t\tCountryISO.HongKong,\r\n\t\t\t'852'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Hungary (Magyarország)',\r\n\t\t\tCountryISO.Hungary,\r\n\t\t\t'36'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Iceland (Ísland)',\r\n\t\t\tCountryISO.Iceland,\r\n\t\t\t'354'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'India (भारत)',\r\n\t\t\tCountryISO.India,\r\n\t\t\t'91'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Indonesia',\r\n\t\t\tCountryISO.Indonesia,\r\n\t\t\t'62'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Iran (‫ایران‬‎)',\r\n\t\t\tCountryISO.Iran,\r\n\t\t\t'98'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Iraq (‫العراق‬‎)',\r\n\t\t\tCountryISO.Iraq,\r\n\t\t\t'964'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ireland',\r\n\t\t\tCountryISO.Ireland,\r\n\t\t\t'353'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Isle of Man',\r\n\t\t\tCountryISO.IsleOfMan,\r\n\t\t\t'44',\r\n\t\t\t2,\r\n\t\t\t[1624]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Israel (‫ישראל‬‎)',\r\n\t\t\tCountryISO.Israel,\r\n\t\t\t'972'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Italy (Italia)',\r\n\t\t\tCountryISO.Italy,\r\n\t\t\t'39',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Jamaica',\r\n\t\t\t'jm',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'876',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Japan (日本)',\r\n\t\t\tCountryISO.Japan,\r\n\t\t\t'81'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Jersey',\r\n\t\t\tCountryISO.Jersey,\r\n\t\t\t'44',\r\n\t\t\t3,\r\n\t\t\t[1534]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Jordan (‫الأردن‬‎)',\r\n\t\t\tCountryISO.Jordan,\r\n\t\t\t'962'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kazakhstan (Казахстан)',\r\n\t\t\tCountryISO.Kazakhstan,\r\n\t\t\t'7',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kenya',\r\n\t\t\tCountryISO.Kenya,\r\n\t\t\t'254'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kiribati',\r\n\t\t\tCountryISO.Kiribati,\r\n\t\t\t'686'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kosovo',\r\n\t\t\tCountryISO.Kosovo,\r\n\t\t\t'383'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kuwait (‫الكويت‬‎)',\r\n\t\t\tCountryISO.Kuwait,\r\n\t\t\t'965'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Kyrgyzstan (Кыргызстан)',\r\n\t\t\tCountryISO.Kyrgyzstan,\r\n\t\t\t'996'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Laos (ລາວ)',\r\n\t\t\tCountryISO.Laos,\r\n\t\t\t'856'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Latvia (Latvija)',\r\n\t\t\tCountryISO.Latvia,\r\n\t\t\t'371'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Lebanon (‫لبنان‬‎)',\r\n\t\t\tCountryISO.Lebanon,\r\n\t\t\t'961'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Lesotho',\r\n\t\t\tCountryISO.Lesotho,\r\n\t\t\t'266'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Liberia',\r\n\t\t\tCountryISO.Liberia,\r\n\t\t\t'231'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Libya (‫ليبيا‬‎)',\r\n\t\t\tCountryISO.Libya,\r\n\t\t\t'218'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Liechtenstein',\r\n\t\t\tCountryISO.Liechtenstein,\r\n\t\t\t'423'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Lithuania (Lietuva)',\r\n\t\t\tCountryISO.Lithuania,\r\n\t\t\t'370'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Luxembourg',\r\n\t\t\tCountryISO.Luxembourg,\r\n\t\t\t'352'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Macau (澳門)',\r\n\t\t\tCountryISO.Macau,\r\n\t\t\t'853'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Macedonia (FYROM) (Македонија)',\r\n\t\t\tCountryISO.Macedonia,\r\n\t\t\t'389'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Madagascar (Madagasikara)',\r\n\t\t\tCountryISO.Madagascar,\r\n\t\t\t'261'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Malawi',\r\n\t\t\tCountryISO.Malawi,\r\n\t\t\t'265'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Malaysia',\r\n\t\t\tCountryISO.Malaysia,\r\n\t\t\t'60'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Maldives',\r\n\t\t\tCountryISO.Maldives,\r\n\t\t\t'960'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mali',\r\n\t\t\tCountryISO.Mali,\r\n\t\t\t'223'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Malta',\r\n\t\t\tCountryISO.Malta,\r\n\t\t\t'356'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Marshall Islands',\r\n\t\t\tCountryISO.MarshallIslands,\r\n\t\t\t'692'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Martinique',\r\n\t\t\tCountryISO.Martinique,\r\n\t\t\t'596'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mauritania (‫موريتانيا‬‎)',\r\n\t\t\tCountryISO.Mauritania,\r\n\t\t\t'222'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mauritius (Moris)',\r\n\t\t\tCountryISO.Mauritius,\r\n\t\t\t'230'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mayotte',\r\n\t\t\tCountryISO.Mayotte,\r\n\t\t\t'262',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mexico (México)',\r\n\t\t\tCountryISO.Mexico,\r\n\t\t\t'52'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Micronesia',\r\n\t\t\tCountryISO.Micronesia,\r\n\t\t\t'691'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Moldova (Republica Moldova)',\r\n\t\t\tCountryISO.Moldova,\r\n\t\t\t'373'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Monaco',\r\n\t\t\tCountryISO.Monaco,\r\n\t\t\t'377'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mongolia (Монгол)',\r\n\t\t\tCountryISO.Mongolia,\r\n\t\t\t'976'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Montenegro (Crna Gora)',\r\n\t\t\tCountryISO.Montenegro,\r\n\t\t\t'382'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Montserrat',\r\n\t\t\t'ms',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'664',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Morocco (‫المغرب‬‎)',\r\n\t\t\tCountryISO.Morocco,\r\n\t\t\t'212',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Mozambique (Moçambique)',\r\n\t\t\tCountryISO.Mozambique,\r\n\t\t\t'258'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Myanmar (Burma) (မြန်မာ)',\r\n\t\t\tCountryISO.Myanmar,\r\n\t\t\t'95'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Namibia (Namibië)',\r\n\t\t\tCountryISO.Namibia,\r\n\t\t\t'264'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Nauru',\r\n\t\t\tCountryISO.Nauru,\r\n\t\t\t'674'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Nepal (नेपाल)',\r\n\t\t\tCountryISO.Nepal,\r\n\t\t\t'977'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Netherlands (Nederland)',\r\n\t\t\tCountryISO.Netherlands,\r\n\t\t\t'31'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'New Caledonia (Nouvelle-Calédonie)',\r\n\t\t\tCountryISO.NewCaledonia,\r\n\t\t\t'687'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'New Zealand',\r\n\t\t\tCountryISO.NewZealand,\r\n\t\t\t'64'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Nicaragua',\r\n\t\t\tCountryISO.Nicaragua,\r\n\t\t\t'505'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Niger (Nijar)',\r\n\t\t\tCountryISO.Niger,\r\n\t\t\t'227'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Nigeria',\r\n\t\t\tCountryISO.Nigeria,\r\n\t\t\t'234'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Niue',\r\n\t\t\tCountryISO.Niue,\r\n\t\t\t'683'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Norfolk Island',\r\n\t\t\tCountryISO.NorfolkIsland,\r\n\t\t\t'672'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'North Korea (조선 민주주의 인민 공화국)',\r\n\t\t\tCountryISO.NorthKorea,\r\n\t\t\t'850'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Northern Mariana Islands',\r\n\t\t\tCountryISO.NorthernMarianaIslands,\r\n\t\t\t'1670'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Norway (Norge)',\r\n\t\t\tCountryISO.Norway,\r\n\t\t\t'47',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Oman (‫عُمان‬‎)',\r\n\t\t\tCountryISO.Oman,\r\n\t\t\t'968'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Pakistan (‫پاکستان‬‎)',\r\n\t\t\tCountryISO.Pakistan,\r\n\t\t\t'92'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Palau',\r\n\t\t\tCountryISO.Palau,\r\n\t\t\t'680'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Palestine (‫فلسطين‬‎)',\r\n\t\t\tCountryISO.Palestine,\r\n\t\t\t'970'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Panama (Panamá)',\r\n\t\t\tCountryISO.Panama,\r\n\t\t\t'507'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Papua New Guinea',\r\n\t\t\tCountryISO.PapuaNewGuinea,\r\n\t\t\t'675'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Paraguay',\r\n\t\t\tCountryISO.Paraguay,\r\n\t\t\t'595'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Peru (Perú)',\r\n\t\t\tCountryISO.Peru,\r\n\t\t\t'51'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Philippines',\r\n\t\t\tCountryISO.Philippines,\r\n\t\t\t'63'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Poland (Polska)',\r\n\t\t\tCountryISO.Poland,\r\n\t\t\t'48'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Portugal',\r\n\t\t\tCountryISO.Portugal,\r\n\t\t\t'351'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Puerto Rico',\r\n\t\t\tCountryISO.PuertoRico,\r\n\t\t\t'1',\r\n\t\t\t3,\r\n\t\t\t['787', '939']\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Qatar (‫قطر‬‎)',\r\n\t\t\tCountryISO.Qatar,\r\n\t\t\t'974'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Réunion (La Réunion)',\r\n\t\t\tCountryISO.Réunion,\r\n\t\t\t'262',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Romania (România)',\r\n\t\t\tCountryISO.Romania,\r\n\t\t\t'40'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Russia (Россия)',\r\n\t\t\tCountryISO.Russia,\r\n\t\t\t'7',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Rwanda',\r\n\t\t\tCountryISO.Rwanda,\r\n\t\t\t'250'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Barthélemy (Saint-Barthélemy)',\r\n\t\t\tCountryISO.SaintBarthélemy,\r\n\t\t\t'590',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Helena',\r\n\t\t\tCountryISO.SaintHelena,\r\n\t\t\t'290'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Kitts and Nevis',\r\n\t\t\tCountryISO.SaintKittsAndNevis,\r\n\t\t\t'1869'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Lucia',\r\n\t\t\t'lc',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'758',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Martin (Saint-Martin (partie française))',\r\n\t\t\tCountryISO.SaintMartin,\r\n\t\t\t'590',\r\n\t\t\t2\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)',\r\n\t\t\tCountryISO.SaintPierreAndMiquelon,\r\n\t\t\t'508'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saint Vincent and the Grenadines',\r\n\t\t\t'vc',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'784',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Samoa',\r\n\t\t\tCountryISO.Samoa,\r\n\t\t\t'685'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'San Marino',\r\n\t\t\tCountryISO.SanMarino,\r\n\t\t\t'378'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'São Tomé and Príncipe (São Tomé e Príncipe)',\r\n\t\t\tCountryISO.SãoToméAndPríncipe,\r\n\t\t\t'239'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Saudi Arabia (‫المملكة العربية السعودية‬‎)',\r\n\t\t\tCountryISO.SaudiArabia,\r\n\t\t\t'966'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Senegal (Sénégal)',\r\n\t\t\tCountryISO.Senegal,\r\n\t\t\t'221'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Serbia (Србија)',\r\n\t\t\tCountryISO.Serbia,\r\n\t\t\t'381'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Seychelles',\r\n\t\t\tCountryISO.Seychelles,\r\n\t\t\t'248'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sierra Leone',\r\n\t\t\tCountryISO.SierraLeone,\r\n\t\t\t'232'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Singapore',\r\n\t\t\tCountryISO.Singapore,\r\n\t\t\t'65'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sint Maarten',\r\n\t\t\t'sx',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'721',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Slovakia (Slovensko)',\r\n\t\t\tCountryISO.Slovakia,\r\n\t\t\t'421'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Slovenia (Slovenija)',\r\n\t\t\tCountryISO.Slovenia,\r\n\t\t\t'386'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Solomon Islands',\r\n\t\t\tCountryISO.SolomonIslands,\r\n\t\t\t'677'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Somalia (Soomaaliya)',\r\n\t\t\tCountryISO.Somalia,\r\n\t\t\t'252'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'South Africa',\r\n\t\t\tCountryISO.SouthAfrica,\r\n\t\t\t'27'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'South Korea (대한민국)',\r\n\t\t\tCountryISO.SouthKorea,\r\n\t\t\t'82'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'South Sudan (‫جنوب السودان‬‎)',\r\n\t\t\tCountryISO.SouthSudan,\r\n\t\t\t'211'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Spain (España)',\r\n\t\t\tCountryISO.Spain,\r\n\t\t\t'34'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sri Lanka (ශ්‍රී ලංකාව)',\r\n\t\t\tCountryISO.SriLanka,\r\n\t\t\t'94'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sudan (‫السودان‬‎)',\r\n\t\t\tCountryISO.Sudan,\r\n\t\t\t'249'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Suriname',\r\n\t\t\tCountryISO.Suriname,\r\n\t\t\t'597'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Svalbard and Jan Mayen',\r\n\t\t\tCountryISO.SvalbardAndJanMayen,\r\n\t\t\t'47',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Swaziland',\r\n\t\t\tCountryISO.Swaziland,\r\n\t\t\t'268'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Sweden (Sverige)',\r\n\t\t\tCountryISO.Sweden,\r\n\t\t\t'46'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Switzerland (Schweiz)',\r\n\t\t\tCountryISO.Switzerland,\r\n\t\t\t'41'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Syria (‫سوريا‬‎)',\r\n\t\t\tCountryISO.Syria,\r\n\t\t\t'963'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Taiwan (台灣)',\r\n\t\t\tCountryISO.Taiwan,\r\n\t\t\t'886'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tajikistan',\r\n\t\t\tCountryISO.Tajikistan,\r\n\t\t\t'992'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tanzania',\r\n\t\t\tCountryISO.Tanzania,\r\n\t\t\t'255'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Thailand (ไทย)',\r\n\t\t\tCountryISO.Thailand,\r\n\t\t\t'66'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Timor-Leste',\r\n\t\t\tCountryISO.TimorLeste,\r\n\t\t\t'670'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Togo',\r\n\t\t\tCountryISO.Togo,\r\n\t\t\t'228'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tokelau',\r\n\t\t\tCountryISO.Tokelau,\r\n\t\t\t'690'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tonga',\r\n\t\t\tCountryISO.Tonga,\r\n\t\t\t'676'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Trinidad and Tobago',\r\n\t\t\t'tt',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'868',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tunisia (‫تونس‬‎)',\r\n\t\t\tCountryISO.Tunisia,\r\n\t\t\t'216'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Turkey (Türkiye)',\r\n\t\t\tCountryISO.Turkey,\r\n\t\t\t'90'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Turkmenistan',\r\n\t\t\tCountryISO.Turkmenistan,\r\n\t\t\t'993'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Turks and Caicos Islands',\r\n\t\t\tCountryISO.TurksAndCaicosIslands,\r\n\t\t\t'1649'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Tuvalu',\r\n\t\t\tCountryISO.Tuvalu,\r\n\t\t\t'688'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'U.S. Virgin Islands',\r\n\t\t\t'vi',\r\n\t\t\t'1',\r\n\t\t\t1,\r\n\t\t\t[\r\n\t\t\t\t'340',\r\n\t\t\t]\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Uganda',\r\n\t\t\tCountryISO.Uganda,\r\n\t\t\t'256'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Ukraine (Україна)',\r\n\t\t\tCountryISO.Ukraine,\r\n\t\t\t'380'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'United Arab Emirates (‫الإمارات العربية المتحدة‬‎)',\r\n\t\t\tCountryISO.UnitedArabEmirates,\r\n\t\t\t'971'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'United Kingdom',\r\n\t\t\tCountryISO.UnitedKingdom,\r\n\t\t\t'44',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'United States',\r\n\t\t\tCountryISO.UnitedStates,\r\n\t\t\t'1',\r\n\t\t\t0\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Uruguay',\r\n\t\t\tCountryISO.Uruguay,\r\n\t\t\t'598'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Uzbekistan (Oʻzbekiston)',\r\n\t\t\tCountryISO.Uzbekistan,\r\n\t\t\t'998'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Vanuatu',\r\n\t\t\tCountryISO.Vanuatu,\r\n\t\t\t'678'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Vatican City (Città del Vaticano)',\r\n\t\t\tCountryISO.VaticanCity,\r\n\t\t\t'39',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Venezuela',\r\n\t\t\tCountryISO.Venezuela,\r\n\t\t\t'58'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Vietnam (Việt Nam)',\r\n\t\t\tCountryISO.Vietnam,\r\n\t\t\t'84'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Wallis and Futuna',\r\n\t\t\tCountryISO.WallisAndFutuna,\r\n\t\t\t'681'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Western Sahara (‫الصحراء الغربية‬‎)',\r\n\t\t\tCountryISO.WesternSahara,\r\n\t\t\t'212',\r\n\t\t\t1\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Yemen (‫اليمن‬‎)',\r\n\t\t\tCountryISO.Yemen,\r\n\t\t\t'967'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Zambia',\r\n\t\t\tCountryISO.Zambia,\r\n\t\t\t'260'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Zimbabwe',\r\n\t\t\tCountryISO.Zimbabwe,\r\n\t\t\t'263'\r\n\t\t],\r\n\t\t[\r\n\t\t\t'Åland Islands',\r\n\t\t\tCountryISO.ÅlandIslands,\r\n\t\t\t'358',\r\n\t\t\t1\r\n\t\t]\r\n\t];\r\n}","import * as lpn from 'google-libphonenumber';\r\n\r\n/*\r\nWe use \"control: any\" instead of \"control: FormControl\" to silence:\r\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\r\nThis happens because I've expanded control with nativeElement via\r\n'NativeElementInjectorDirective' to get an access to the element.\r\nMore about this approach and reasons for this:\r\nhttps://github.com/angular/angular/issues/18025\r\nhttps://stackoverflow.com/a/54075119/1617590\r\n*/\r\nexport const phoneNumberValidator = (control: any) => {\r\n\tif (!control.value) {\r\n\t\treturn;\r\n\t}\r\n\t// Find <input> inside injected nativeElement and get its \"id\".\r\n\tconst el: HTMLElement = control.nativeElement as HTMLElement;\r\n\tconst inputBox: HTMLInputElement = el\r\n\t\t? el.querySelector('input[type=\"tel\"]')\r\n\t\t: undefined;\r\n\tif (inputBox) {\r\n\t\tconst id = inputBox.id;\r\n\t\tconst isCheckValidation = inputBox.getAttribute('validation');\r\n\t\tif (isCheckValidation === 'true') {\r\n\t\t\tconst isRequired = control.errors && control.errors.required === true;\r\n\t\t\tconst error = { validatePhoneNumber: { valid: false } };\r\n\r\n\t\t\tinputBox.setCustomValidity('Invalid field.');\r\n\r\n\t\t\tlet number: lpn.PhoneNumber;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tnumber = lpn.PhoneNumberUtil.getInstance().parse(\r\n\t\t\t\t\tcontrol.value.number,\r\n\t\t\t\t\tcontrol.value.countryCode\r\n\t\t\t\t);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (isRequired === true) {\r\n\t\t\t\t\treturn error;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinputBox.setCustomValidity('');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (control.value) {\r\n\t\t\t\tif (!number) {\r\n\t\t\t\t\treturn error;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!lpn.PhoneNumberUtil.getInstance().isValidNumberForRegion(\r\n\t\t\t\t\t\t\tnumber,\r\n\t\t\t\t\t\t\tcontrol.value.countryCode\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tinputBox.setCustomValidity('');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (isCheckValidation === 'false') {\r\n\t\t\tinputBox.setCustomValidity('');\r\n\r\n\t\t\tcontrol.clearValidators();\r\n\t\t}\r\n\t}\r\n\treturn;\r\n};\r\n","import * as lpn from 'google-libphonenumber';\r\n\r\nimport {\r\n\tComponent,\r\n\tElementRef,\r\n\tEventEmitter,\r\n\tforwardRef,\r\n\tInput,\r\n\tOnChanges,\r\n\tOnInit,\r\n\tOutput,\r\n\tSimpleChanges,\r\n\tViewChild,\r\n} from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { CountryCode } from './data/country-code';\r\nimport { CountryISO } from './enums/country-iso.enum';\r\nimport { SearchCountryField } from './enums/search-country-field.enum';\r\nimport { TooltipLabel } from './enums/tooltip-label.enum';\r\nimport type { ChangeData } from './interfaces/change-data';\r\nimport type { Country } from './model/country.model';\r\nimport { phoneNumberValidator } from './ngx-intl-tel-input.validator';\r\n\r\n@Component({\r\n\t// tslint:disable-next-line: component-selector\r\n\tselector: 'ngx-intl-tel-input',\r\n\ttemplateUrl: './ngx-intl-tel-input.component.html',\r\n\tstyleUrls: ['./ngx-intl-tel-input.component.css'],\r\n\tproviders: [\r\n\t\tCountryCode,\r\n\t\t{\r\n\t\t\tprovide: NG_VALUE_ACCESSOR,\r\n\t\t\t// tslint:disable-next-line:no-forward-ref\r\n\t\t\tuseExisting: forwardRef(() => NgxIntlTelInputComponent),\r\n\t\t\tmulti: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tprovide: NG_VALIDATORS,\r\n\t\t\tuseValue: phoneNumberValidator,\r\n\t\t\tmulti: true,\r\n\t\t},\r\n\t],\r\n})\r\nexport class NgxIntlTelInputComponent implements OnInit, OnChanges {\r\n\t@Input() value = '';\r\n\t@Input() preferredCountries: Array<string> = [];\r\n\t@Input() enablePlaceholder = true;\r\n\t@Input() cssClass = 'form-control';\r\n\t@Input() onlyCountries: Array<string> = [];\r\n\t@Input() enableAutoCountrySelect = true;\r\n\t@Input() searchCountryFlag = false;\r\n\t@Input() searchCountryField: SearchCountryField[] = [SearchCountryField.All];\r\n\t@Input() searchCountryPlaceholder = 'Search Country';\r\n\t@Input() maxLength = '';\r\n\t@Input() tooltipField: TooltipLabel;\r\n\t@Input() selectFirstCountry = true;\r\n\t@Input() selectedCountryISO: CountryISO;\r\n\t@Input() phoneValidation = true;\r\n\t@Input() inputId = 'phone';\r\n\t@Input() separateDialCode = false;\r\n\tseparateDialCodeClass: string;\r\n\r\n\t@Output() readonly countryChange = new EventEmitter<Country>();\r\n\r\n\tselectedCountry: Country = {\r\n\t\tareaCodes: undefined,\r\n\t\tdialCode: '',\r\n\t\thtmlId: '',\r\n\t\tflagClass: '',\r\n\t\tiso2: '',\r\n\t\tname: '',\r\n\t\tplaceHolder: '',\r\n\t\tpriority: 0,\r\n\t};\r\n\r\n\tphoneNumber = '';\r\n\tallCountries: Array<Country> = [];\r\n\tpreferredCountriesInDropDown: Array<Country> = [];\r\n\t// Has to be 'any' to prevent a need to install @types/google-libphonenumber by the package user...\r\n\tphoneUtil: any = lpn.PhoneNumberUtil.getInstance();\r\n\tdisabled = false;\r\n\terrors: Array<any> = ['Phone number is required.'];\r\n\tcountrySearchText = '';\r\n\r\n\t@ViewChild('countryList') countryList: ElementRef;\r\n\r\n\tonTouched = () => {};\r\n\tpropagateChange = (_: ChangeData) => {};\r\n\r\n\tconstructor(private countryCodeData: CountryCode) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tngOnChanges(changes: SimpleChanges) {\r\n\t\tconst selectedISO = changes['selectedCountryISO'];\r\n\t\tif (\r\n\t\t\tthis.allCountries &&\r\n\t\t\tselectedISO &&\r\n\t\t\tselectedISO.currentValue !== selectedISO.previousValue\r\n\t\t) {\r\n\t\t\tthis.getSelectedCountry();\r\n\t\t}\r\n\t\tif (changes.preferredCountries) {\r\n\t\t\tthis.getPreferredCountries();\r\n\t\t}\r\n\t\tthis.checkSeparateDialCodeStyle();\r\n\t}\r\n\r\n\t/*\r\n\t\tThis is a wrapper method to avoid calling this.ngOnInit() in writeValue().\r\n\t\tRef: http://codelyzer.com/rules/no-life-cycle-call/\r\n\t*/\r\n\tinit() {\r\n\t\tthis.fetchCountryData();\r\n\t\tif (this.preferredCountries.length) {\r\n\t\t\tthis.getPreferredCountries();\r\n\t\t}\r\n\t\tif (this.onlyCountries.length) {\r\n\t\t\tthis.allCountries = this.allCountries.filter((c) =>\r\n\t\t\t\tthis.onlyCountries.includes(c.iso2)\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (this.selectFirstCountry) {\r\n\t\t\tif (this.preferredCountriesInDropDown.length) {\r\n\t\t\t\tthis.setSelectedCountry(this.preferredCountriesInDropDown[0]);\r\n\t\t\t} else {\r\n\t\t\t\tthis.setSelectedCountry(this.allCountries[0]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.getSelectedCountry();\r\n\t\tthis.checkSeparateDialCodeStyle();\r\n\t}\r\n\r\n\tgetPreferredCountries() {\r\n\t\tif (this.preferredCountries.length) {\r\n\t\t\tthis.preferredCountriesInDropDown = [];\r\n\t\t\tthis.preferredCountries.forEach((iso2) => {\r\n\t\t\t\tconst preferredCountry = this.allCountries.filter((c) => {\r\n\t\t\t\t\treturn c.iso2 === iso2;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.preferredCountriesInDropDown.push(preferredCountry[0]);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tgetSelectedCountry() {\r\n\t\tif (this.selectedCountryISO) {\r\n\t\t\tthis.selectedCountry = this.allCountries.find((c) => {\r\n\t\t\t\treturn c.iso2.toLowerCase() === this.selectedCountryISO.toLowerCase();\r\n\t\t\t});\r\n\t\t\tif (this.selectedCountry) {\r\n\t\t\t\tif (this.phoneNumber) {\r\n\t\t\t\t\tthis.onPhoneNumberChange();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\r\n\t\t\t\t\t// tslint:disable-next-line: no-null-keyword\r\n\t\t\t\t\tthis.propagateChange(null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetSelectedCountry(country: Country) {\r\n\t\tthis.selectedCountry = country;\r\n\t\tthis.countryChange.emit(country);\r\n\t}\r\n\r\n\t/**\r\n\t * Search country based on country name, iso2, dialCode or all of them.\r\n\t */\r\n\tsearchCountry() {\r\n\t\tif (!this.countrySearchText) {\r\n\t\t\tthis.countryList.nativeElement\r\n\t\t\t\t.querySelector('.iti__country-list li')\r\n\t\t\t\t.scrollIntoView({\r\n\t\t\t\t\tbehavior: 'smooth',\r\n\t\t\t\t\tblock: 'nearest',\r\n\t\t\t\t\tinline: 'nearest',\r\n\t\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst countrySearchTextLower = this.countrySearchText.toLowerCase();\r\n\t\tconst country = this.allCountries.filter((c) => {\r\n\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.All) > -1) {\r\n\t\t\t\t// Search in all fields\r\n\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\r\n\t\t\t\t\treturn c;\r\n\t\t\t\t}\r\n\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\r\n\t\t\t\t\treturn c;\r\n\t\t\t\t}\r\n\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\r\n\t\t\t\t\treturn c;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Or search by specific SearchCountryField(s)\r\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Iso2) > -1) {\r\n\t\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\r\n\t\t\t\t\t\treturn c;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Name) > -1) {\r\n\t\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\r\n\t\t\t\t\t\treturn c;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.DialCode) > -1) {\r\n\t\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\r\n\t\t\t\t\t\treturn c;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (country.length > 0) {\r\n\t\t\tconst el = this.countryList.nativeElement.querySelector(\r\n\t\t\t\t'#' + country[0].htmlId\r\n\t\t\t);\r\n\t\t\tif (el) {\r\n\t\t\t\tel.scrollIntoView({\r\n\t\t\t\t\tbehavior: 'smooth',\r\n\t\t\t\t\tblock: 'nearest',\r\n\t\t\t\t\tinline: 'nearest',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.checkSeparateDialCodeStyle();\r\n\t}\r\n\r\n\tpublic onPhoneNumberChange(): void {\r\n\t\tlet countryCode: string | undefined;\r\n\t\t// Handle the case where the user sets the value programatically based on a persisted ChangeData obj.\r\n\t\tif (this.phoneNumber && typeof this.phoneNumber === 'object') {\r\n\t\t\tconst numberObj: ChangeData = this.phoneNumber;\r\n\t\t\tthis.phoneNumber = numberObj.number;\r\n\t\t\tcountryCode = numberObj.countryCode;\r\n\t\t}\r\n\r\n\t\tthis.value = this.phoneNumber;\r\n\t\tcountryCode = countryCode || this.selectedCountry.iso2.toUpperCase();\r\n\t\tlet number: lpn.PhoneNumber;\r\n\t\ttry {\r\n\t\t\tnumber = this.phoneUtil.parse(this.phoneNumber, countryCode);\r\n\t\t} catch (e) {}\r\n\r\n\t\t// auto select country based on the extension (and areaCode if needed) (e.g select Canada if number starts with +1 416)\r\n\t\tif (this.enableAutoCountrySelect) {\r\n\t\t\tcountryCode =\r\n\t\t\t\tnumber && number.getCountryCode()\r\n\t\t\t\t\t? this.getCountryIsoCode(number.getCountryCode(), number)\r\n\t\t\t\t\t: this.selectedCountry.iso2;\r\n\t\t\tif (countryCode && countryCode !== this.selectedCountry.iso2) {\r\n\t\t\t\tconst newCountry = this.allCountries.sort((a, b) => {\r\n\t\t\t\t\treturn a.priority - b.priority;\r\n\t\t\t\t}).find(\r\n\t\t\t\t\t(c) => c.iso2 === countryCode\r\n\t\t\t\t);\r\n\t\t\t\tif (newCountry) {\r\n\t\t\t\t\tthis.selectedCountry = newCountry;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcountryCode = countryCode ? countryCode : this.selectedCountry.iso2;\r\n\r\n\t\tthis.checkSeparateDialCodeStyle();\r\n\r\n\t\tif (!this.value) {\r\n\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\r\n\t\t\t// tslint:disable-next-line: no-null-keyword\r\n\t\t\tthis.propagateChange(null);\r\n\t\t} else {\r\n\t\t\tconst intlNo = number\r\n\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\r\n\t\t\t\t: '';\r\n\r\n\t\t\t// parse phoneNumber if separate dial code is needed\r\n\t\t\tif (this.separateDialCode && intlNo) {\r\n\t\t\t\tthis.value = this.removeDialCode(intlNo);\r\n\t\t\t}\r\n\r\n\t\t\tthis.propagateChange(intlNo);\r\n\t\t\t/*\r\n\t\t\t({\r\n\t\t\t\tnumber: this.value,\r\n\t\t\t\tinternationalNumber: intlNo,\r\n\t\t\t\tnationalNumber: number\r\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\r\n\t\t\t\t\t: '',\r\n\t\t\t\te164Number: number\r\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\r\n\t\t\t\t\t: '',\r\n\t\t\t\tcountryCode: countryCode.toUpperCase(),\r\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode,\r\n\t\t\t});*/\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onCountrySelect(country: Country, el): void {\r\n\t\tthis.setSelectedCountry(country);\r\n\r\n\t\tthis.checkSeparateDialCodeStyle();\r\n\r\n\t\tif (this.phoneNumber && this.phoneNumber.length > 0) {\r\n\t\t\tthis.value = this.phoneNumber;\r\n\r\n\t\t\tlet number: lpn.PhoneNumber;\r\n\t\t\ttry {\r\n\t\t\t\tnumber = this.phoneUtil.parse(\r\n\t\t\t\t\tthis.phoneNumber,\r\n\t\t\t\t\tthis.selectedCountry.iso2.toUpperCase()\r\n\t\t\t\t);\r\n\t\t\t} catch (e) {}\r\n\r\n\t\t\tconst intlNo = number\r\n\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\r\n\t\t\t\t: '';\r\n\r\n\t\t\t// parse phoneNumber if separate dial code is needed\r\n\t\t\tif (this.separateDialCode && intlNo) {\r\n\t\t\t\tthis.value = this.removeDialCode(intlNo);\r\n\t\t\t}\r\n\r\n\t\t\tthis.propagateChange(intlNo)\r\n\t\t\t/*\r\n\t\t\t({\r\n\t\t\t\tnumber: this.value,\r\n\t\t\t\tinternationalNumber: intlNo,\r\n\t\t\t\tnationalNumber: number\r\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\r\n\t\t\t\t\t: '',\r\n\t\t\t\te164Number: number\r\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\r\n\t\t\t\t\t: '',\r\n\t\t\t\tcountryCode: this.selectedCountry.iso2.toUpperCase(),\r\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode,\r\n\t\t\t});\r\n\t\t\t*/\r\n\t\t} else {\r\n\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\r\n\t\t\t// tslint:disable-next-line: no-null-keyword\r\n\t\t\tthis.propagateChange(null);\r\n\t\t}\r\n\r\n\t\tel.focus();\r\n\t}\r\n\r\n\tpublic onInputKeyPress(event: KeyboardEvent): void {\r\n\t\tconst allowedChars = /[0-9\\+\\-\\ ]/;\r\n\t\tconst allowedCtrlChars = /[axcv]/; // Allows copy-pasting\r\n\t\tconst allowedOtherKeys = [\r\n\t\t\t'ArrowLeft',\r\n\t\t\t'ArrowUp',\r\n\t\t\t'ArrowRight',\r\n\t\t\t'ArrowDown',\r\n\t\t\t'Home',\r\n\t\t\t'End',\r\n\t\t\t'Insert',\r\n\t\t\t'Delete',\r\n\t\t\t'Backspace',\r\n\t\t];\r\n\r\n\t\tif (\r\n\t\t\t!allowedChars.test(event.key) &&\r\n\t\t\t!(event.ctrlKey && allowedCtrlChars.test(event.key)) &&\r\n\t\t\t!allowedOtherKeys.includes(event.key)\r\n\t\t) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected fetchCountryData(): void {\r\n\t\t/* Clearing the list to avoid duplicates (https://github.com/webcat12345/ngx-intl-tel-input/issues/248) */\r\n\t\tthis.allCountries = [];\r\n\r\n\t\tthis.countryCodeData.allCountries.forEach((c) => {\r\n\t\t\tconst country: Country = {\r\n\t\t\t\tname: c[0].toString(),\r\n\t\t\t\tiso2: c[1].toString(),\r\n\t\t\t\tdialCode: c[2].toString(),\r\n\t\t\t\tpriority: +c[3] || 0,\r\n\t\t\t\tareaCodes: (c[4] as string[]) || undefined,\r\n\t\t\t\thtmlId: `iti-0__item-${c[1].toString()}`,\r\n\t\t\t\tflagClass: `iti__${c[1].toString().toLocaleLowerCase()}`,\r\n\t\t\t\tplaceHolder: '',\r\n\t\t\t};\r\n\r\n\t\t\tif (this.enablePlaceholder) {\r\n\t\t\t\tcountry.placeHolder = this.getPhoneNumberPlaceHolder(\r\n\t\t\t\t\tcountry.iso2.toUpperCase()\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tthis.allCountries.push(country);\r\n\t\t});\r\n\t}\r\n\r\n\tprotected getPhoneNumberPlaceHolder(countryCode: string): string {\r\n\t\ttry {\r\n\t\t\treturn this.phoneUtil.format(\r\n\t\t\t\tthis.phoneUtil.getExampleNumber(countryCode),\r\n\t\t\t\tlpn.PhoneNumberFormat.INTERNATIONAL\r\n\t\t\t);\r\n\t\t} catch (e) {\r\n\t\t\treturn e;\r\n\t\t}\r\n\t}\r\n\r\n\tregisterOnChange(fn: any): void {\r\n\t\tthis.propagateChange = fn;\r\n\t}\r\n\r\n\tregisterOnTouched(fn: any) {\r\n\t\tthis.onTouched = fn;\r\n\t}\r\n\r\n\tsetDisabledState(isDisabled: boolean): void {\r\n\t\tthis.disabled = isDisabled;\r\n\t}\r\n\r\n\twriteValue(obj: any): void {\r\n\t\tif (obj === undefined) {\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t\tthis.phoneNumber = obj;\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.onPhoneNumberChange();\r\n\t\t}, 1);\r\n\t}\r\n\r\n\tprivate getCountryIsoCode(\r\n\t\tcountryCode: number,\r\n\t\tnumber: lpn.PhoneNumber\r\n\t): string | undefined {\r\n\t\t// Will use this to match area code from the first numbers\r\n\t\tconst rawNumber = number['values_']['2'].toString();\r\n\t\t// List of all countries with countryCode (can be more than one. e.x. US, CA, DO, PR all have +1 countryCode)\r\n\t\tconst countries = this.allCountries.filter(\r\n\t\t\t(c) => c.dialCode === countryCode.toString()\r\n\t\t);\r\n\t\t// Main country is the country, which has no areaCodes specified in country-code.ts file.\r\n\t\tconst mainCountry = countries.find((c) => c.areaCodes === undefined);\r\n\t\t// Secondary countries are all countries, which have areaCodes specified in country-code.ts file.\r\n\t\tconst secondaryCountries = countries.filter(\r\n\t\t\t(c) => c.areaCodes !== undefined\r\n\t\t);\r\n\t\tlet matchedCountry = mainCountry ? mainCountry.iso2 : undefined;\r\n\r\n\t\t/*\r\n\t\t\tIterate over each secondary country and check if nationalNumber starts with any of areaCodes available.\r\n\t\t\tIf no matches found, fallback to the main country.\r\n\t\t*/\r\n\t\tsecondaryCountries.forEach((country) => {\r\n\t\t\tcountry.areaCodes.forEach((areaCode) => {\r\n\t\t\t\tif (rawNumber.startsWith(areaCode)) {\r\n\t\t\t\t\tmatchedCountry = country.iso2;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn matchedCountry;\r\n\t}\r\n\r\n\tseparateDialCodePlaceHolder(placeholder: string): string {\r\n\t\treturn this.removeDialCode(placeholder);\r\n\t}\r\n\r\n\tprivate removeDialCode(phoneNumber: string): string {\r\n\t\tif (this.separateDialCode && phoneNumber) {\r\n\t\t\tphoneNumber = phoneNumber.substr(phoneNumber.indexOf(' ') + 1);\r\n\t\t}\r\n\t\treturn phoneNumber;\r\n\t}\r\n\r\n\t// adjust input alignment\r\n\tprivate checkSeparateDialCodeStyle() {\r\n\t\tif (this.separateDialCode && this.selectedCountry) {\r\n\t\t\tconst cntryCd = this.selectedCountry.dialCode;\r\n\t\t\tthis.separateDialCodeClass =\r\n\t\t\t\t'separate-dial-code iti-sdc-' + (cntryCd.length + 1);\r\n\t\t} else {\r\n\t\t\tthis.separateDialCodeClass = '';\r\n\t\t}\r\n\t}\r\n}\r\n","import { Directive, ElementRef, OnInit } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n/*\r\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\r\n'NativeElementInjectorDirective' injects nativeElement to each control,\r\nso we can access it from inside validator for example.\r\nMore about this approach and reasons for this:\r\nhttps://github.com/angular/angular/issues/18025\r\nhttps://stackoverflow.com/a/54075119/1617590\r\n*/\r\n@Directive({\r\n\t// tslint:disable-next-line: directive-selector\r\n\tselector: '[ngModel], [formControl], [formControlName]',\r\n})\r\nexport class NativeElementInjectorDirective implements OnInit {\r\n\tconstructor(\r\n\t\tprivate controlDir: NgControl,\r\n\t\tprivate host: ElementRef<HTMLFormElement>\r\n\t) {}\r\n\tngOnInit() {\r\n\t\tif (this.controlDir.control) {\r\n\t\t\tthis.controlDir.control['nativeElement'] = this.host.nativeElement;\r\n\t\t}\r\n\t}\r\n}\r\n","export enum TooltipLabel {\r\n\tName = 'name',\r\n\tIso2 = 'iso2'\r\n}\r\n","// import { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\n// import { TooltipModule } from 'ngx-bootstrap/tooltip';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NativeElementInjectorDirective } from './directives/native-element-injector.directive';\r\nimport { NgxIntlTelInputComponent } from './ngx-intl-tel-input.component';\r\n\r\n\r\n@NgModule({\r\n\tdeclarations: [NgxIntlTelInputComponent, NativeElementInjectorDirective],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tNgbDropdownModule\r\n  ],\r\n\texports: [NgxIntlTelInputComponent, NativeElementInjectorDirective],\r\n})\r\nexport class NgxIntlTelInputModule {\r\n\r\n}"]}